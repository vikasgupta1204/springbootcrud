# Getting Started

### Reference Documentation
For further reference, please consider the following sections:

* [Official Apache Maven documentation](https://maven.apache.org/guides/index.html)
* [Spring Boot Maven Plugin Reference Guide](https://docs.spring.io/spring-boot/docs/2.7.6/maven-plugin/reference/html/)
* [Create an OCI image](https://docs.spring.io/spring-boot/docs/2.7.6/maven-plugin/reference/html/#build-image)
* [Spring Boot DevTools](https://docs.spring.io/spring-boot/docs/2.7.6/reference/htmlsingle/#using.devtools)
* [Spring Web](https://docs.spring.io/spring-boot/docs/2.7.6/reference/htmlsingle/#web)
* [Thymeleaf](https://docs.spring.io/spring-boot/docs/2.7.6/reference/htmlsingle/#web.servlet.spring-mvc.template-engines)

### Guides
The following guides illustrate how to use some features concretely:

* [Building a RESTful Web Service](https://spring.io/guides/gs/rest-service/)
* [Serving Web Content with Spring MVC](https://spring.io/guides/gs/serving-web-content/)
* [Building REST services with Spring](https://spring.io/guides/tutorials/rest/)
* [Handling Form Submission](https://spring.io/guides/gs/handling-form-submission/)

* how to loop in thymeleaf
*th:text is used to print the element in html template
*th:each is used to loop therough the list   in html template

* How to use conditional based statements in Thymeleaf
    * Elvis Operator :=works like a ternary operator
    * If-Unless Operator
    *Switch case

*Fragments -Include/Insert/Replace ->How to resuse the code

    th:replace - It will actually substitute the host tag [tag where we use replace] by the fragment's.
    That means, It will remove the host tag and in place of host tag, it will add the
    specified fragment including the fragment tag.
    th:insert - It will simply insert the specified fragment as the body of its host tag including the
    fragment tag.
    th:include - It will also insert the specified fragment as the body of its host tag but excludin
    the fragment tag.*


*Passing dynamic value to template while including

*Server Side Validation in spring mvc
